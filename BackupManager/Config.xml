<?xml version="1.0" encoding="utf-8"?>

<!-- ReSharper disable MarkupTextTypo -->
<Config xmlns="ConfigSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <BackupDisk>d:\</BackupDisk>

  <!-- After this many days the backup warns to check the disks again -->
  <BackupDiskDaysToReportSinceFilesChecked>90</BackupDiskDaysToReportSinceFilesChecked>

  <!-- A bigger percentage difference than this and the backup stops -->
  <BackupDiskDifferenceInFileCountAllowedPercentage>1</BackupDiskDifferenceInFileCountAllowedPercentage>

  <!-- MinimumCriticalBackupDiskSpace in MB -->
  <BackupDiskMinimumCriticalSpace>210</BackupDiskMinimumCriticalSpace>

  <!-- MinimumFreeSpaceToLeaveOnBackupDisk in MB -->
  <BackupDiskMinimumFreeSpaceToLeave>201</BackupDiskMinimumFreeSpaceToLeave>

  <!-- number of days before the next scan will be a full scan of the Master Folders -->
  <DirectoriesDaysBetweenFullScan>7</DirectoriesDaysBetweenFullScan>

  <!-- True and the Directories are monitored for changes and not scanned fully each day -->
  <DirectoriesFileChangeWatcherOnOff>true</DirectoriesFileChangeWatcherOnOff>

  <!-- If an error occurs whilst monitoring Directories we wait for this long before attempting to Reset the Watcher in seconds (120) -->
  <DirectoriesFileChangeWatcherRestartDelay>120</DirectoriesFileChangeWatcherRestartDelay>

  <FileRenameRules>
    <FileRenameRule>
      <FileDiscoveryRegex>^.*\\_TV(\s\(non-tvdb\))?\\.*\.srt$</FileDiscoveryRegex>
      <Search>[avc],[AVC],[x264],[X264]</Search>
      <Replace>[h264]</Replace>
    </FileRenameRule>
    <FileRenameRule>
      <FileDiscoveryRegex>^.*\\_TV(\s\(non-tvdb\))?\\.*\.srt$</FileDiscoveryRegex>
      <Search>[hevc],[HEVC],[x265],[X265]</Search>
      <Replace>[h265]</Replace>
    </FileRenameRule>
  </FileRenameRules>

  <!-- Only files matching this filter are used for File System scanning -->
  <DirectoriesFilterRegEx>(.*(?&lt;!\.tmp)|.*\\_Backup\\.*)$</DirectoriesFilterRegEx>

  <DirectoriesToHealthCheckOnOff>true</DirectoriesToHealthCheckOnOff>

  <!-- Minimum age of the last change to a directory before we will scan it in milliseconds (250) -->
  <DirectoriesMinimumAgeBeforeScanning>20000</DirectoriesMinimumAgeBeforeScanning>

  <!-- Minimum critical directory space in MB -->
  <DirectoriesMinimumCriticalSpace>150000</DirectoriesMinimumCriticalSpace>

  <!-- Minimum read speed in MB/s -->
  <DirectoriesMinimumReadSpeed>20</DirectoriesMinimumReadSpeed>

  <!-- Minimum write speed in MB/s -->
  <DirectoriesMinimumWriteSpeed>20</DirectoriesMinimumWriteSpeed>

  <DirectoriesMinimumReEncodeSizePercentage>60</DirectoriesMinimumReEncodeSizePercentage>

  <DirectoriesMaximumReEncodeSizePercentage>90</DirectoriesMaximumReEncodeSizePercentage>

  <!-- Number of milliseconds between checking all the changed file notifications for folders to scan later (180) -->
  <DirectoriesProcessChangesTimer>10000</DirectoriesProcessChangesTimer>

  <!-- Whether to check video files are named corrected and rename them if not when doing full scans -->
  <DirectoriesRenameVideoFilesForFullScansOnOff>true</DirectoriesRenameVideoFilesForFullScansOnOff>

  <!-- Whether to check video files are named corrected and rename them if not -->
  <DirectoriesRenameVideoFilesOnOff>true</DirectoriesRenameVideoFilesOnOff>

  <!-- Any files matching this will be checked for correct name and renamed if not correct -->
  <DirectoriesRenameVideoFilesRegEx>^.*\[([hx]26[45]|MPEG([24])?|HEVC|XviD|V(C1|P9)|AVC|DivX|RGB)\]\.(?:m(?:kv|p(4|e?g))|avi)$</DirectoriesRenameVideoFilesRegEx>

  <!-- Number of milliseconds between checking all the directories ready to scan to see if they are old enough now (300) -->
  <DirectoriesScanTimer>20000</DirectoriesScanTimer>

  <FilesToScanForChanges>5</FilesToScanForChanges>

  <!-- When true check for latest versions of applications -->
  <MonitoringCheckLatestVersions>true</MonitoringCheckLatestVersions>

  <!-- Monitor interval in milliseconds -->
  <MonitoringInterval>180000</MonitoringInterval>

  <!-- When true the service monitoring starts when the app starts -->
  <MonitoringOnOff>false</MonitoringOnOff>

  <MonitoringStartDelayOnOff>true</MonitoringStartDelayOnOff>

  <PlexToken />

  <!-- Pushover messages are sent to this App Token until any limit reached and then the next -->
  <PushoverAppTokens>
    <Token>InsertYourPushoverAppTokenHere</Token>
    <Token>InsertYourPushoverAppTokenHere</Token>
  </PushoverAppTokens>

  <!-- True to enable sending Pushover messages -->
  <PushoverOnOff>true</PushoverOnOff>

  <PushoverSendLowOnOff>true</PushoverSendLowOnOff>

  <PushoverSendNormalOnOff>true</PushoverSendNormalOnOff>

  <PushoverSendHighOnOff>true</PushoverSendHighOnOff>

  <PushoverSendEmergencyOnOff>true</PushoverSendEmergencyOnOff>

  <PushoverUserKey>InsertYourPushoverUserKeyHere</PushoverUserKey>

  <!-- Sends a high priority message once this limit is passed -->
  <PushoverWarningMessagesRemaining>500</PushoverWarningMessagesRemaining>

  <!-- When true a backup scan will run when scheduled -->
  <ScheduledBackupOnOff>true</ScheduledBackupOnOff>

  <!-- When true a backup scan will run when the app starts -->
  <ScheduledBackupRunOnStartup>false</ScheduledBackupRunOnStartup>

  <!--  ScheduledBackupStartTime as hh:mm:ss -->
  <ScheduledBackupStartTime>11:30:00</ScheduledBackupStartTime>

  <!-- Size of disk speed test file in MB -->
  <SpeedTestFileSize>100</SpeedTestFileSize>

  <!-- Number of disk speed test iterations to run -->
  <SpeedTestIterations>1</SpeedTestIterations>

  <!-- If True we test the speed of the disks -->
  <SpeedTestOnOff>false</SpeedTestOnOff>

  <Monitors>
    <Monitor>
      <Url />
      <Timeout>30000</Timeout>
      <ProcessToKill>plex media server,ffmpeg</ProcessToKill>
      <ApplicationToStart>"%ProgramFiles(x86)%\Plex\Plex Media Server\Plex Media Server.exe"</ApplicationToStart>
      <Name>Plex</Name>
      <Port>0</Port>
      <FailureTimePeriod>30</FailureTimePeriod>
      <MaximumFailures>10</MaximumFailures>
      <ApplicationType>PlexPass</ApplicationType>
    </Monitor>
  </Monitors>

  <!-- List each UNC path that you want to scan for files to back up here -->
  <DirectoriesToBackup>
    <Directory>\\nas1\assets4\_Test\_Movies</Directory>
    <Directory>\\nas1\assets4\_Test\_TV</Directory>
  </DirectoriesToBackup>

  <Filters>
    <!-- RegEx's of file to ignore when executing a scan -->
    <FilterRegEx>!*.bup</FilterRegEx>
    <FilterRegEx>!*-TdarrCacheFile-*.*</FilterRegEx>
  </Filters>
  <FilesToDelete>
    <FilesToDeleteRegEx>^.*\\._.DS_Store$</FilesToDeleteRegEx>
    <FilesToDeleteRegEx>^.*\\.DS_Store$</FilesToDeleteRegEx>
    <FilesToDeleteRegEx>^.*\\_TV\\.*_eng.srt$</FilesToDeleteRegEx>
  </FilesToDelete>
  <DisksToSkipOnRestore />
  <SymbolicLinks>
    <!-- we need to capture the path up to and including the movie name and also the movieName -->
    <SymbolicLink>
      <RootDirectory>J:\</RootDirectory>
      <FileDiscoveryRegEx>^(.*\\_Movies(?:\s\(non-tmdb\))?\\(.*?))(?:$|\\)</FileDiscoveryRegEx>
      <RelativePath>_Movies\$2</RelativePath>
      <PathToTarget>$1</PathToTarget>
    </SymbolicLink>
    <SymbolicLink>
      <RootDirectory>J:\</RootDirectory>
      <FileDiscoveryRegEx>^(.*\\_TV(?:\s\(non-tvdb\))?\\(.*?))(?:$|\\)</FileDiscoveryRegEx>
      <RelativePath>_TV\$2</RelativePath>
      <PathToTarget>$1</PathToTarget>
    </SymbolicLink>
  </SymbolicLinks>
  
  <VideoMinimumPercentageDifferenceForRuntime>65</VideoMinimumPercentageDifferenceForRuntime>

  <VideoMaximumPercentageDifferenceForRuntime>92</VideoMaximumPercentageDifferenceForRuntime>

</Config>
<!-- ReSharper restore MarkupTextTypo -->