<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Main_AdminTitle" xml:space="preserve">
    <value> - Admin</value>
  </data>
  <data name="Main_ExceptionOccured" xml:space="preserve">
    <value>Exception occurred during application start. {0}</value>
  </data>
  <data name="Main_AreYouSureDelete" xml:space="preserve">
    <value>Are you sure you want delete any extra files on the backup disk not in our list?</value>
  </data>
  <data name="Main_DeleteExtraTitle" xml:space="preserve">
    <value>Delete extra files</value>
  </data>
  <data name="Main_RestoreFiles" xml:space="preserve">
    <value>Are you sure you want to copy files from multiple backup disks to the new master folder location?</value>
  </data>
  <data name="Main_RestoreFilesTitle" xml:space="preserve">
    <value>Restore backup files</value>
  </data>
  <data name="Main_RestoreFilesSelectAMasterFolder" xml:space="preserve">
    <value>You must select a master folder that you'd files the files from backup disks restored for. This is typically the drive that is now failing</value>
  </data>
  <data name="Main_RestoreFilesMasterFolderToRestoreTo" xml:space="preserve">
    <value>You must select a master folder that you'd files the files from backup copied to. This is typically a new drive that will replace the failing drive</value>
  </data>
  <data name="Main_Cancelling" xml:space="preserve">
    <value>Cancelling ...</value>
  </data>
  <data name="Main_SetupFileWatchers" xml:space="preserve">
    <value>File Watchers = {0}</value>
  </data>
 
  <data name="Main_FoldersQueued" xml:space="preserve">
    <value>There are folders to scan queued. Would you like to scan them before closing?</value>
  </data>
  <data name="Main_ScanFoldersTitle" xml:space="preserve">
    <value>Scan folders</value>
  </data>
  <data name="Main_BackupDiskConnectCorrectDisk2" xml:space="preserve">
    <value>Please connect backup disk {0} so we can continue restoring files. Have you connected this disk now?</value>
  </data>
  <data name="Main_BackupDiskConnectCorrectDisk" xml:space="preserve">
    <value>Connect correct backup disk</value>
  </data>
  <data name="Main_RecalculateAllHashes" xml:space="preserve">
    <value>Are you sure you want to recalculate the hash codes from the master files?</value>
  </data>
  <data name="Main_RecalculateAllHashesTitle" xml:space="preserve">
    <value>Recalculate hash codes</value>
  </data>
  <data name="Main_BackupDiskError" xml:space="preserve">
    <value>There was an error checking the connected backup disk</value>
  </data>
  <data name="Main_BackupDiskTitle" xml:space="preserve">
    <value>Backup disk</value>
  </data>
  <data name="Main_TaskWrapperException" xml:space="preserve">
    <value>Exception occurred. Cancelling operation. {0}</value>
  </data>
  <data name="Main_UpdateMasterFiles" xml:space="preserve">
    <value>Are you sure you want to rebuild the master list?</value>
  </data>
  <data name="Main_UpdateMasterFilesTitle" xml:space="preserve">
    <value>Rebuild master list</value>
  </data>
  <data name="Main_RecreateAllSymbolicLinks" xml:space="preserve">
    <value>Are you sure you want to check all the symbolic links?</value>
  </data>
  <data name="Main_SymbolicLinksTitle" xml:space="preserve">
    <value>Symbolic Links</value>
  </data>
  <data name="BackupFile_GetRelativePath_The_fullPathCorrect" xml:space="preserve">
    <value>The fullPath must start with the masterFolder and indexFolder</value>
  </data>
  <data name="Utils_DirectoryNameNullOrEmpty" xml:space="preserve">
    <value>Directory is a null reference or an empty string</value>
  </data>
  <data name="BackupFile_ZeroByteHashcode" xml:space="preserve">
    <value>Zero byte Hashcode</value>
  </data>
  <data name="BackupFile_HashCodeNotNull" xml:space="preserve">
    <value>Hash code cannot be null</value>
  </data>
  <data name="Rules_MissingFileRules" xml:space="preserve">
    <value>Missing file rules</value>
  </data>
  <data name="Rules_DuplicateRuleNumber" xml:space="preserve">
    <value>Duplicate rule number detected in rules.xml</value>
  </data>
  <data name="InvalidDirName" xml:space="preserve">
    <value>The directory name {0} is invalid.</value>
  </data>
  <data name="InvalidDirName_NotExists" xml:space="preserve">
    <value>The directory name '{0}' does not exist.</value>
  </data>
  <data name="InvalidEnumArgument" xml:space="preserve">
    <value>The value of argument '{0}'({1}) is invalid for Enum type '{2}'.</value>
  </data>
  <data name="MediaBackup_GetBackupFile_IndexFolder_or_MasterFolder_is_empty__Not_supported" xml:space="preserve">
    <value>IndexFolder or MasterFolder is empty. Not supported</value>
  </data>
  <data name="MediaBackup_GetBackupFile_Unable_to_determine_MasterFolder_or_IndexFolder_" xml:space="preserve">
    <value>Unable to determine MasterFolder or IndexFolder.</value>
  </data>
  <data name="MediaBackup_Load_Duplicate_hash_found_on_load_of__0_" xml:space="preserve">
    <value>Duplicate hash found on load of {0}</value>
  </data>
  <data name="MediaBackup_Load_Unable_to_load_MediaBackup_xml__0_" xml:space="preserve">
    <value>Unable to load MediaBackup.xml {0}</value>
  </data>
  <data name="MediaBackup_UpdateLastFullScan_yyyy_MM_dd" xml:space="preserve">
    <value>yyyy-MM-dd</value>
  </data>
  <data name="MediaBackup_GetBackupFileFromContentsHashcode_More_than_1_file_with_same_ContentsHashcode__0_" xml:space="preserve">
    <value>More than 1 file with same ContentsHashcode {0}</value>
  </data>
  <data name="BackupDisk_UpdateDiskChecked_yyyy_MM_dd" xml:space="preserve">
    <value>yyyy-MM-dd</value>
  </data>
  <data name="BackupFile_UpdateDiskChecked_yyyy_MM_dd" xml:space="preserve">
    <value>yyyy-MM-dd</value>
  </data>
  <data name="Config_Load_Unable_to_load_config_xml__0_" xml:space="preserve">
    <value>Unable to load config.xml {0}</value>
  </data>
  <data name="Rules_Load_Unable_to_load_Rules_xml__0_" xml:space="preserve">
    <value>Unable to load Rules.xml {0}</value>
  </data>
  <data name="FileSystemWatcher_OnError_Directory__0__not_found_" xml:space="preserve">
    <value>Directory {0} not found.</value>
  </data>
  <data name="Main_ReportBackupDiskStatusButton_Click_dd_MMM_yy" xml:space="preserve">
    <value>dd-MMM-yy</value>
  </data>
  <data name="Main_UpdateUI_Tick_h_h__mm_m_" xml:space="preserve">
    <value>h'h 'mm'm'</value>
  </data>
  <data name="Main_FileSystemWatcher_ReadyToScan_Directory_scan_skipped__It_will_be_scanned_again_in__0__" xml:space="preserve">
    <value>Directory scan skipped. It will be scanned again in {0}.</value>
  </data>
  <data name="Main_FileSystemWatcher_ReadyToScan_Saved_" xml:space="preserve">
    <value>Saved.</value>
  </data>
  <data name="Main_UpdateSymbolicLinks_Checking__0_" xml:space="preserve">
    <value>Checking {0}</value>
  </data>
  <data name="Main_UpdateSymbolicLinks_Completed_" xml:space="preserve">
    <value>Completed.</value>
  </data>
  <data name="Main_UpdateSendingPushoverButton_" xml:space="preserve">
    <value>Sending = {0}</value>
  </data>
 
  <data name="Main_UpdateMonitoringButton_" xml:space="preserve">
    <value>Monitoring = {0}</value>
  </data>
  <data name="Main_UpdateSpeedTestDisksButton_" xml:space="preserve">
    <value>Speed Test Disks = {0}</value>
  </data>
  <data name="Main_UpdateScheduledBackupButton_" xml:space="preserve">
    <value>Backup = {0}</value>
  </data>
  <data name="Main_ON" xml:space="preserve">
    <value>ON</value>
  </data>
  <data name="Main_OFF" xml:space="preserve">
    <value>OFF</value>
  </data>
  <data name="Main_UpdateEstimatedFinish_HH_mm" xml:space="preserve">
    <value>HH:mm</value>
  </data>
  <data name="Main_CheckConnectedDiskAndCopyFilesRepeaterAsync_Please_insert_the_next_backup_disk_now" xml:space="preserve">
    <value>Please insert the next backup disk now</value>
  </data>
  <data name="Main_CheckConnectedDisk_Speed_testing__0_" xml:space="preserve">
    <value>Speed testing {0}</value>
  </data>
  <data name="Main_CheckConnectedDisk_Scanning__0_" xml:space="preserve">
    <value>Scanning {0}</value>
  </data>
  <data name="Main_SetupBackupDisk_Please_insert_the_next_backup_disk_now" xml:space="preserve">
    <value>Please insert the next backup disk now</value>
  </data>
  <data name="Main_CopyFilesLoop_Copying" xml:space="preserve">
    <value>Copying</value>
  </data>
  <data name="Main_FileExistsInternal_Skipping__0_" xml:space="preserve">
    <value>Skipping {0}</value>
  </data>
  <data name="Main_CopyFileInternal_Copying__0_" xml:space="preserve">
    <value>Copying {0}</value>
  </data>
  <data name="Main_CopyFileInternal___Estimated_finish_by_" xml:space="preserve">
    <value>. Estimated finish by </value>
  </data>
  <data name="Main_CopyFileInternal_HH_mm" xml:space="preserve">
    <value>HH:mm</value>
  </data>
  <data name="Main_CopyFileInternal___Estimated_finish_by_tomorrow_at_" xml:space="preserve">
    <value>. Estimated finish by tomorrow at </value>
  </data>
</root>